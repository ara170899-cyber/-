"""Console application for practising English with daily words and a chat bot."""

from __future__ import annotations

import sys
from textwrap import fill

from .chatbot import ChatBot, EXIT_KEYWORDS
from .daily_words import DailyWordTrainer
from .rewards import Reward, RewardEngine
from .storage import ProgressStorage


def format_rewards(rewards: list[Reward]) -> str:
    if not rewards:
        return "–ù–æ–≤—ã—Ö –Ω–∞–≥—Ä–∞–¥ –Ω–µ—Ç –ø–æ–∫–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è!"
    parts = [f"üèÜ {reward.name} ‚Äî {reward.description}" for reward in rewards]
    return "\n".join(parts)


def show_daily_words(trainer: DailyWordTrainer) -> None:
    words, points, new_rewards = trainer.get_today_words()
    if not words:
        print("–°–µ–≥–æ–¥–Ω—è —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º.")
        return

    print("\n–°–ª–æ–≤–∞ –¥–Ω—è:")
    for idx, word in enumerate(words, 1):
        print(f" {idx}. {word['word']} ‚Äî {word['translation']}")
        print(f"    –ü—Ä–∏–º–µ—Ä: {word['example']}")

    if points:
        print(f"\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ {points} –æ—á–∫–æ–≤ –∑–∞ –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞!")
    if new_rewards:
        print("–ù–æ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:")
        print(format_rewards(new_rewards))

    progress = trainer.storage.load()
    print("\n–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:")
    print(f" –û—á–∫–∏: {progress['points']}")
    print(f" –°–µ—Ä–∏—è –¥–Ω–µ–π: {progress['streak']}")
    print(f" –í—ã—É—á–µ–Ω–æ —Å–ª–æ–≤: {len(progress.get('learned_words', []))}")


def choose_topic(chatbot: ChatBot) -> str | None:
    topics = chatbot.topics()
    print("\n–¢–µ–º—ã –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:")
    for index, topic in enumerate(topics, 1):
        print(f" {index}. {topic.title}")
        print(f"    {fill(topic.intro, width=70)}")
        if topic.hints:
            print("    –ü–æ–¥—Å–∫–∞–∑–∫–∏:")
            for hint in topic.hints:
                print(f"     - {hint}")

    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–º—ã (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è): ").strip()
    if not choice:
        return None
    if not choice.isdigit() or not (1 <= int(choice) <= len(topics)):
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return None
    return topics[int(choice) - 1].slug


def talk_with_bot(chatbot: ChatBot, topic_slug: str) -> None:
    print("\n–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–æ–≤: " + ", ".join(sorted(EXIT_KEYWORDS)))
    while True:
        message = input("–í—ã: ")
        response, points, new_rewards = chatbot.respond(topic_slug, message)
        print(f"–ë–æ—Ç: {response}")
        lowered = message.strip().lower()
        if points:
            print(f"(+{points} –æ—á–∫–æ–≤)")
        if new_rewards:
            print(format_rewards(new_rewards))
        if lowered and any(keyword in lowered for keyword in EXIT_KEYWORDS):
            break


def show_progress(storage: ProgressStorage, reward_engine: RewardEngine) -> None:
    progress = storage.load()
    print("\n–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å:")
    print(f" –û—á–∫–∏: {progress['points']}")
    print(f" –°–µ—Ä–∏—è –¥–Ω–µ–π: {progress['streak']}")
    print(f" –í—ã—É—á–µ–Ω–æ —Å–ª–æ–≤: {len(progress.get('learned_words', []))}")
    if progress.get("rewards"):
        print(" –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:")
        for reward_id in progress["rewards"]:
            reward = reward_engine.get_reward(reward_id)
            if reward:
                print(f"  - {reward.name}: {reward.description}")
    else:
        print(" –ü–æ–∫–∞ –±–µ–∑ –Ω–∞–≥—Ä–∞–¥, –Ω–æ –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏!")


def main() -> int:
    storage = ProgressStorage()
    reward_engine = RewardEngine()
    trainer = DailyWordTrainer(storage=storage, reward_engine=reward_engine)
    chatbot = ChatBot(storage=storage, reward_engine=reward_engine)

    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! üéØ")

    while True:
        print("\n–ú–µ–Ω—é:")
        print(" 1. –°–ª–æ–≤–∞ –¥–Ω—è")
        print(" 2. –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–æ—Ç–æ–º")
        print(" 3. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
        print(" 4. –í—ã—Ö–æ–¥")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

        if choice == "1":
            show_daily_words(trainer)
        elif choice == "2":
            topic = choose_topic(chatbot)
            if topic:
                talk_with_bot(chatbot, topic)
        elif choice == "3":
            show_progress(storage, reward_engine)
        elif choice == "4":
            print("–î–æ –≤—Å—Ç—Ä–µ—á–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.")
            return 0
        else:
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é.")


if __name__ == "__main__":
    sys.exit(main())

